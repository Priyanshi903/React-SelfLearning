{"ast":null,"code":"var _jsxFileName = \"C:\\\\ES-06_JS\\\\React\\\\Hooks\\\\custom context\\\\src\\\\store\\\\auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // AuthContext is an object that contains a component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  // not necessary to write but can be used for better IDE suggestionss\n  onLogout: () => {},\n  // just a prototype\n  onLogin: (email, password) => {}\n});\nexport const AuthcontextProvider = props => {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n  };\n\n  const loginHandler = () => {\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      onLogout: logoutHandler,\n      onLogin: loginHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AuthcontextProvider, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n\n_c = AuthcontextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthcontextProvider\");","map":{"version":3,"names":["React","useState","AuthContext","createContext","isLoggedIn","onLogout","onLogin","email","password","AuthcontextProvider","props","setIsLoggedIn","logoutHandler","loginHandler","localStorage","setItem","children"],"sources":["C:/ES-06_JS/React/Hooks/custom context/src/store/auth-context.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n// AuthContext is an object that contains a component\r\nconst AuthContext = React.createContext({\r\n    isLoggedIn: false,\r\n    // not necessary to write but can be used for better IDE suggestionss\r\n    onLogout: () => { },\r\n    // just a prototype\r\n    onLogin: (email, password) => { }\r\n});\r\n\r\nexport const AuthcontextProvider = props => {\r\n\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    const logoutHandler = () => {\r\n        setIsLoggedIn(false);\r\n    }\r\n    const loginHandler = () => {\r\n        localStorage.setItem('isLoggedIn', '1');\r\n        setIsLoggedIn(true);\r\n    }\r\n\r\n    return <AuthContext.Provider\r\n        value={{\r\n            isLoggedIn: isLoggedIn,\r\n            onLogout: logoutHandler,\r\n            onLogin: loginHandler,\r\n        }}>{props.children}</AuthContext.Provider>;\r\n};\r\n\r\nexport default AuthContext;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;;;AACA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;EACpCC,UAAU,EAAE,KADwB;EAEpC;EACAC,QAAQ,EAAE,MAAM,CAAG,CAHiB;EAIpC;EACAC,OAAO,EAAE,CAACC,KAAD,EAAQC,QAAR,KAAqB,CAAG;AALG,CAApB,CAApB;AAQA,OAAO,MAAMC,mBAAmB,GAAGC,KAAK,IAAI;EAAA;;EAExC,MAAM,CAACN,UAAD,EAAaO,aAAb,IAA8BV,QAAQ,CAAC,KAAD,CAA5C;;EAEA,MAAMW,aAAa,GAAG,MAAM;IACxBD,aAAa,CAAC,KAAD,CAAb;EACH,CAFD;;EAGA,MAAME,YAAY,GAAG,MAAM;IACvBC,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmC,GAAnC;IACAJ,aAAa,CAAC,IAAD,CAAb;EACH,CAHD;;EAKA,oBAAO,QAAC,WAAD,CAAa,QAAb;IACH,KAAK,EAAE;MACHP,UAAU,EAAEA,UADT;MAEHC,QAAQ,EAAEO,aAFP;MAGHN,OAAO,EAAEO;IAHN,CADJ;IAAA,UAKCH,KAAK,CAACM;EALP;IAAA;IAAA;IAAA;EAAA,QAAP;AAMH,CAlBM;;GAAMP,mB;;KAAAA,mB;AAoBb,eAAeP,WAAf"},"metadata":{},"sourceType":"module"}