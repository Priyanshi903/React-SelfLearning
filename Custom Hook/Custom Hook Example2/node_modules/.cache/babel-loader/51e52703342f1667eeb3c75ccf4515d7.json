{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst useHttp = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendRequest = async (requestConfig, applyData) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : 'GET',\n        headers: requestConfig.headers ? requestConfig.headers : {},\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null\n      });\n\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await response.json();\n      applyData(data);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n\n    setIsLoading(false);\n  }; // return {\n  //     isLoading: isLoading,\n  //     error: error,\n  //     sendRequest: sendRequest\n  // }; //same as,,,as it has same names:-\n\n\n  return {\n    isLoading,\n    error,\n    sendRequest\n  };\n};\n\n_s(useHttp, \"vj++RuHna9NxFPGCY0p/mi1GZNM=\");\n\nexport default useHttp;","map":{"version":3,"names":["useState","useHttp","isLoading","setIsLoading","error","setError","sendRequest","requestConfig","applyData","response","fetch","url","method","headers","body","JSON","stringify","ok","Error","data","json","err","message"],"sources":["C:/ES-06_JS/React/Custom Hook/Custom Hook Example2/src/components/hooks/use-http.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useHttp = () => {\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const sendRequest = async (requestConfig, applyData) => {\r\n        setIsLoading(true);\r\n        setError(null);\r\n        try {\r\n            const response = await fetch(\r\n                requestConfig.url, {\r\n                method: requestConfig.method ? requestConfig.method : 'GET',\r\n                headers: requestConfig.headers ? requestConfig.headers : {},\r\n                body: requestConfig.body ? JSON.stringify(requestConfig.body) : null\r\n            }\r\n            );\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Request failed!');\r\n            }\r\n\r\n            const data = await response.json();\r\n            applyData(data);\r\n\r\n        } catch (err) {\r\n            setError(err.message || 'Something went wrong!');\r\n        }\r\n        setIsLoading(false);\r\n    };\r\n\r\n    // return {\r\n    //     isLoading: isLoading,\r\n    //     error: error,\r\n    //     sendRequest: sendRequest\r\n    // }; //same as,,,as it has same names:-\r\n\r\n    return {\r\n        isLoading,\r\n        error,\r\n        sendRequest\r\n    };\r\n};\r\n\r\nexport default useHttp;"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,OAAO,GAAG,MAAM;EAAA;;EAElB,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;;EAEA,MAAMM,WAAW,GAAG,OAAOC,aAAP,EAAsBC,SAAtB,KAAoC;IACpDL,YAAY,CAAC,IAAD,CAAZ;IACAE,QAAQ,CAAC,IAAD,CAAR;;IACA,IAAI;MACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CACxBH,aAAa,CAACI,GADU,EACL;QACnBC,MAAM,EAAEL,aAAa,CAACK,MAAd,GAAuBL,aAAa,CAACK,MAArC,GAA8C,KADnC;QAEnBC,OAAO,EAAEN,aAAa,CAACM,OAAd,GAAwBN,aAAa,CAACM,OAAtC,GAAgD,EAFtC;QAGnBC,IAAI,EAAEP,aAAa,CAACO,IAAd,GAAqBC,IAAI,CAACC,SAAL,CAAeT,aAAa,CAACO,IAA7B,CAArB,GAA0D;MAH7C,CADK,CAA5B;;MAQA,IAAI,CAACL,QAAQ,CAACQ,EAAd,EAAkB;QACd,MAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;MACH;;MAED,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAT,EAAnB;MACAZ,SAAS,CAACW,IAAD,CAAT;IAEH,CAhBD,CAgBE,OAAOE,GAAP,EAAY;MACVhB,QAAQ,CAACgB,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;IACH;;IACDnB,YAAY,CAAC,KAAD,CAAZ;EACH,CAvBD,CALkB,CA8BlB;EACA;EACA;EACA;EACA;;;EAEA,OAAO;IACHD,SADG;IAEHE,KAFG;IAGHE;EAHG,CAAP;AAKH,CAzCD;;GAAML,O;;AA2CN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}