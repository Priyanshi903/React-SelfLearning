{"ast":null,"code":"var _jsxFileName = \"C:\\\\ES-06_JS\\\\React\\\\Routing\\\\Router Example 2\\\\src\\\\pages\\\\AllQuotes.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport QuoteList from '../components/quotes/QuoteList';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport useHttp from '../hooks/use-http';\nimport { getAllQuotes } from '../lib/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllQuotes = () => {\n  _s();\n\n  // true means we started in loading state\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error\n  } = useHttp(getAllQuotes, true);\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === 'pending') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered focused\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(QuoteList, {\n    quotes: loadedQuotes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AllQuotes, \"TX91E3Ry29pOjGA3Az87eReX9Xs=\", false, function () {\n  return [useHttp];\n});\n\n_c = AllQuotes;\nexport default AllQuotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllQuotes\");","map":{"version":3,"names":["useEffect","QuoteList","LoadingSpinner","useHttp","getAllQuotes","AllQuotes","sendRequest","status","data","loadedQuotes","error"],"sources":["C:/ES-06_JS/React/Routing/Router Example 2/src/pages/AllQuotes.js"],"sourcesContent":["import { useEffect } from 'react';\r\nimport QuoteList from '../components/quotes/QuoteList'\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getAllQuotes } from '../lib/api';\r\n\r\nconst AllQuotes = () => {\r\n    // true means we started in loading state\r\n    const { sendRequest, status, data: loadedQuotes, error } = useHttp(getAllQuotes, true);\r\n\r\n    useEffect(() => {\r\n        sendRequest();\r\n    }, [sendRequest]);\r\n\r\n    if (status === 'pending') {\r\n        return <div className='centered'>\r\n            <LoadingSpinner />\r\n        </div>\r\n    }\r\n\r\n    if (error) {\r\n        return <p className='centered focused'>{error}</p>\r\n    }\r\n\r\n    return (\r\n        <QuoteList quotes={loadedQuotes} />\r\n    )\r\n};\r\n\r\nexport default AllQuotes;"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,YAAT,QAA6B,YAA7B;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACpB;EACA,MAAM;IAAEC,WAAF;IAAeC,MAAf;IAAuBC,IAAI,EAAEC,YAA7B;IAA2CC;EAA3C,IAAqDP,OAAO,CAACC,YAAD,EAAe,IAAf,CAAlE;EAEAJ,SAAS,CAAC,MAAM;IACZM,WAAW;EACd,CAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;;EAIA,IAAIC,MAAM,KAAK,SAAf,EAA0B;IACtB,oBAAO;MAAK,SAAS,EAAC,UAAf;MAAA,uBACH,QAAC,cAAD;QAAA;QAAA;QAAA;MAAA;IADG;MAAA;MAAA;MAAA;IAAA,QAAP;EAGH;;EAED,IAAIG,KAAJ,EAAW;IACP,oBAAO;MAAG,SAAS,EAAC,kBAAb;MAAA,UAAiCA;IAAjC;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;EAED,oBACI,QAAC,SAAD;IAAW,MAAM,EAAED;EAAnB;IAAA;IAAA;IAAA;EAAA,QADJ;AAGH,CArBD;;GAAMJ,S;UAEyDF,O;;;KAFzDE,S;AAuBN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}