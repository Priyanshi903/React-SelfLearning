{"ast":null,"code":"var _jsxFileName = \"C:\\\\ES-06_JS\\\\React\\\\Routing\\\\Router Example 2\\\\src\\\\components\\\\quotes\\\\QuoteList.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = props => {\n  _s();\n\n  const history = useHistory();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const isSortAscending = queryParams.get('sort') === 'asc';\n  const sortedQuotes = sortQuotes(props.quotes);\n\n  const changeSortingHandler = () => {\n    history.push('/quotes?sort=' + (isSortAscending ? 'desc' : 'asc'));\n    console.log(location); //{pathname: '/quotes', search: '?sort=asc', hash: '', state: undefined, key: 'rvfjej'}\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.sorting,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changeSortingHandler,\n        children: [\"Sort \", isSortAscending ? 'Descending' : 'Ascending']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: props.quotes.map(quote => /*#__PURE__*/_jsxDEV(QuoteItem, {\n        id: quote.id,\n        author: quote.author,\n        text: quote.text\n      }, quote.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteList, \"azjqGSEfmvz5+G/YRUZm7OceOpI=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = QuoteList;\nexport default QuoteList;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteList\");","map":{"version":3,"names":["Fragment","useHistory","useLocation","QuoteItem","classes","sortQuotes","quotes","ascending","sort","quoteA","quoteB","id","QuoteList","props","history","location","queryParams","URLSearchParams","search","isSortAscending","get","sortedQuotes","changeSortingHandler","push","console","log","sorting","list","map","quote","author","text"],"sources":["C:/ES-06_JS/React/Routing/Router Example 2/src/components/quotes/QuoteList.js"],"sourcesContent":["import { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n\n  const history = useHistory();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortAscending = queryParams.get('sort') === 'asc';\n\n  const sortedQuotes = sortQuotes(props.quotes);\n\n  const changeSortingHandler = () => {\n    history.push('/quotes?sort=' + (isSortAscending ? 'desc' : 'asc'));\n    console.log(location); //{pathname: '/quotes', search: '?sort=asc', hash: '', state: undefined, key: 'rvfjej'}\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>Sort {isSortAscending ? 'Descending' : 'Ascending'}</button>\n      </div>\n      <ul className={classes.list}>\n        {props.quotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,cAAxC;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;AAEA,MAAMC,UAAU,GAAG,CAACC,MAAD,EAASC,SAAT,KAAuB;EACxC,OAAOD,MAAM,CAACE,IAAP,CAAY,CAACC,MAAD,EAASC,MAAT,KAAoB;IACrC,IAAIH,SAAJ,EAAe;MACb,OAAOE,MAAM,CAACE,EAAP,GAAYD,MAAM,CAACC,EAAnB,GAAwB,CAAxB,GAA4B,CAAC,CAApC;IACD,CAFD,MAEO;MACL,OAAOF,MAAM,CAACE,EAAP,GAAYD,MAAM,CAACC,EAAnB,GAAwB,CAAxB,GAA4B,CAAC,CAApC;IACD;EACF,CANM,CAAP;AAOD,CARD;;AAUA,MAAMC,SAAS,GAAIC,KAAD,IAAW;EAAA;;EAE3B,MAAMC,OAAO,GAAGb,UAAU,EAA1B;EACA,MAAMc,QAAQ,GAAGb,WAAW,EAA5B;EACA,MAAMc,WAAW,GAAG,IAAIC,eAAJ,CAAoBF,QAAQ,CAACG,MAA7B,CAApB;EAEA,MAAMC,eAAe,GAAGH,WAAW,CAACI,GAAZ,CAAgB,MAAhB,MAA4B,KAApD;EAEA,MAAMC,YAAY,GAAGhB,UAAU,CAACQ,KAAK,CAACP,MAAP,CAA/B;;EAEA,MAAMgB,oBAAoB,GAAG,MAAM;IACjCR,OAAO,CAACS,IAAR,CAAa,mBAAmBJ,eAAe,GAAG,MAAH,GAAY,KAA9C,CAAb;IACAK,OAAO,CAACC,GAAR,CAAYV,QAAZ,EAFiC,CAEV;EACxB,CAHD;;EAKA,oBACE,QAAC,QAAD;IAAA,wBACE;MAAK,SAAS,EAAEX,OAAO,CAACsB,OAAxB;MAAA,uBACE;QAAQ,OAAO,EAAEJ,oBAAjB;QAAA,oBAA6CH,eAAe,GAAG,YAAH,GAAkB,WAA9E;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAI,SAAS,EAAEf,OAAO,CAACuB,IAAvB;MAAA,UACGd,KAAK,CAACP,MAAN,CAAasB,GAAb,CAAkBC,KAAD,iBAChB,QAAC,SAAD;QAEE,EAAE,EAAEA,KAAK,CAAClB,EAFZ;QAGE,MAAM,EAAEkB,KAAK,CAACC,MAHhB;QAIE,IAAI,EAAED,KAAK,CAACE;MAJd,GACOF,KAAK,CAAClB,EADb;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD,CAhCD;;GAAMC,S;UAEYX,U,EACCC,W;;;KAHbU,S;AAkCN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}