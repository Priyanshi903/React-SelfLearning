{"ast":null,"code":"var _jsxFileName = \"C:\\\\ES-06_JS\\\\React\\\\Forms and User Input\\\\src\\\\components\\\\BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport useBasicFormInput from '../hooks/useBasicFormInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isNotEmpty = value => value.trim() !== '';\n\nconst isEmail = value => value.includes('@');\n\nconst BasicForm = props => {\n  _s();\n\n  const {\n    value: firstNameInput,\n    inputHasError: firstNameHasError,\n    inputChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurhandler,\n    validateInput: validateFirstName,\n    reset: resetFirstNameInput\n  } = useBasicFormInput(isNotEmpty);\n  const {\n    value: lastNameInput,\n    inputHasError: lastNameHasError,\n    inputChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurhandler,\n    validateInput: validateLastName,\n    reset: resetLastNameInput\n  } = useBasicFormInput(isNotEmpty);\n  const {\n    value: emailInput,\n    inputHasError: emailHasError,\n    inputChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    validateInput: validateEmail,\n    reset: resetEmailInput\n  } = useBasicFormInput(isEmail);\n  let formIsValid = false;\n\n  if (validateFirstName && validateLastName && validateEmail) {\n    formIsValid = true;\n  }\n\n  const onSubmitFormHandler = event => {\n    event.preventDefault();\n\n    if (!formIsValid) {\n      return;\n    }\n\n    resetFirstNameInput();\n    resetLastNameInput();\n    resetEmailInput();\n  };\n\n  const firstNameInputClasses = firstNameHasError ? 'form-control invalid' : 'form-control ';\n  const lastNameInputClasses = lastNameHasError ? 'form-control invalid' : 'form-control ';\n  const emailInputClasses = emailHasError ? 'form-control invalid' : 'form-control ';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmitFormHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: firstNameInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"firstname\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"firstname\",\n          value: firstNameInput,\n          onChange: firstNameChangeHandler,\n          onBlur: firstNameBlurhandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), firstNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"First Name must not be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lastNameInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"lastname\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"lastname\",\n          value: lastNameInput,\n          onChange: lastNameChangeHandler,\n          onBlur: lastNameBlurhandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), lastNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Last Name must not be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        value: emailInput,\n        onChange: emailChangeHandler,\n        onBlur: emailBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), emailHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please enter a valid email!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicForm, \"yF0soI6NiHDUyGejJ6bK/NBaKzE=\", false, function () {\n  return [useBasicFormInput, useBasicFormInput, useBasicFormInput];\n});\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"names":["useBasicFormInput","isNotEmpty","value","trim","isEmail","includes","BasicForm","props","firstNameInput","inputHasError","firstNameHasError","inputChangeHandler","firstNameChangeHandler","inputBlurHandler","firstNameBlurhandler","validateInput","validateFirstName","reset","resetFirstNameInput","lastNameInput","lastNameHasError","lastNameChangeHandler","lastNameBlurhandler","validateLastName","resetLastNameInput","emailInput","emailHasError","emailChangeHandler","emailBlurHandler","validateEmail","resetEmailInput","formIsValid","onSubmitFormHandler","event","preventDefault","firstNameInputClasses","lastNameInputClasses","emailInputClasses"],"sources":["C:/ES-06_JS/React/Forms and User Input/src/components/BasicForm.js"],"sourcesContent":["import useBasicFormInput from '../hooks/useBasicFormInput';\n\nconst isNotEmpty = value => value.trim() !== '';\nconst isEmail = value => value.includes('@');\n\nconst BasicForm = (props) => {\n\n  const { value: firstNameInput,\n    inputHasError: firstNameHasError,\n    inputChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurhandler,\n    validateInput: validateFirstName,\n    reset: resetFirstNameInput\n  } = useBasicFormInput(isNotEmpty);\n\n  const { value: lastNameInput,\n    inputHasError: lastNameHasError,\n    inputChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurhandler,\n    validateInput: validateLastName,\n    reset: resetLastNameInput\n  } = useBasicFormInput(isNotEmpty);\n\n  const { value: emailInput,\n    inputHasError: emailHasError,\n    inputChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    validateInput: validateEmail,\n    reset: resetEmailInput\n  } = useBasicFormInput(isEmail);\n\n  let formIsValid = false;\n  if (validateFirstName && validateLastName && validateEmail) {\n    formIsValid = true;\n  }\n\n  const onSubmitFormHandler = (event) => {\n    event.preventDefault();\n    if (!formIsValid) {\n      return;\n    }\n    resetFirstNameInput();\n    resetLastNameInput();\n    resetEmailInput();\n  }\n\n  const firstNameInputClasses = firstNameHasError ? 'form-control invalid' : 'form-control ';\n  const lastNameInputClasses = lastNameHasError ? 'form-control invalid' : 'form-control ';\n  const emailInputClasses = emailHasError ? 'form-control invalid' : 'form-control ';\n\n  return (\n    <form onSubmit={onSubmitFormHandler}>\n      <div className='control-group'>\n        <div className={firstNameInputClasses}>\n          <label htmlFor='firstname'>First Name</label>\n          <input type='text'\n            id='firstname'\n            value={firstNameInput}\n            onChange={firstNameChangeHandler}\n            onBlur={firstNameBlurhandler}\n          />\n          {firstNameHasError && <p className=\"error-text\">First Name must not be empty</p>}\n        </div>\n        <div className={lastNameInputClasses}>\n          <label htmlFor='lastname'>Last Name</label>\n          <input type='text'\n            id='lastname'\n            value={lastNameInput}\n            onChange={lastNameChangeHandler}\n            onBlur={lastNameBlurhandler}\n          />\n          {lastNameHasError && <p className=\"error-text\">Last Name must not be empty</p>}\n        </div>\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor='email'>E-Mail Address</label>\n        <input type='text'\n          id='email'\n          value={emailInput}\n          onChange={emailChangeHandler}\n          onBlur={emailBlurHandler}\n        />\n        {emailHasError && <p className=\"error-text\">Please enter a valid email!</p>}\n      </div>\n      <div className='form-actions'>\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}