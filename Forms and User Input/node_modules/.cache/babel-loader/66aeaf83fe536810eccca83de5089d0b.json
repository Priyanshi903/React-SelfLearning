{"ast":null,"code":"var _jsxFileName = \"C:\\\\ES-06_JS\\\\React\\\\Forms and User Input\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport useInput from '../hooks/use-input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const {\n    value: enteredName,\n    isValid: enteredNameIsvalid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler\n  } = useInput(value => value.trim() !== ''); // this arrow function not executed here, it is passed to useInput hook, and entered value is also passed\n\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const enteredEmailIsValid = enteredEmail.trim() !== '' && enteredEmail.includes('@');\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n  let formIsValid = false; // check all validities\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const emailInputBlurHandler = event => {\n    setEnteredEmailTouched(true);\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    setEnteredEmailTouched(true);\n\n    if (!enteredNameIsValid && !enteredEmailIsValid) {\n      return;\n    }\n\n    console.log(enteredName);\n    console.log(enteredEmail);\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue); // nameInputRef.current.value = '';//not ideal way,don't manipulate the DOM\n\n    setEnteredName('');\n    setEnteredEmail('');\n    setEnteredEmailTouched(false);\n    setEnteredNameTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control ';\n  const emailInputClasses = emailInputIsInvalid ? 'form-control invalid' : 'form-control ';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        onChange: emailInputChangeHandler,\n        onBlur: emailInputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please enter a valid email!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"siBG06EvP2VkEtfJPNoXIsubzAg=\", false, function () {\n  return [useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useInput","SimpleInput","props","value","enteredName","isValid","enteredNameIsvalid","hasError","nameInputHasError","valueChangeHandler","nameChangeHandler","inputBlurHandler","nameBlurHandler","trim","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","enteredEmailIsValid","includes","emailInputIsInvalid","formIsValid","enteredNameIsValid","nameInputChangeHandler","event","setEnteredName","target","nameInputBlurHandler","setEnteredNameTouched","emailInputChangeHandler","emailInputBlurHandler","formSubmissionHandler","preventDefault","console","log","enteredValue","nameInputRef","current","nameInputClasses","nameInputIsInvalid","emailInputClasses"],"sources":["C:/ES-06_JS/React/Forms and User Input/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from 'react';\nimport useInput from '../hooks/use-input';\n\nconst SimpleInput = (props) => {\n\n  const {\n    value: enteredName,\n    isValid: enteredNameIsvalid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler\n  } = useInput(value => value.trim() !== '');\n  // this arrow function not executed here, it is passed to useInput hook, and entered value is also passed\n\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n\n  const enteredEmailIsValid = enteredEmail.trim() !== '' && enteredEmail.includes('@');\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n\n  let formIsValid = false;\n  // check all validities\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  }\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  }\n\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  }\n\n  const emailInputBlurHandler = event => {\n    setEnteredEmailTouched(true);\n  }\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    setEnteredEmailTouched(true);\n    if (!enteredNameIsValid && !enteredEmailIsValid) {\n      return;\n    }\n    console.log(enteredName);\n    console.log(enteredEmail);\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue);\n    // nameInputRef.current.value = '';//not ideal way,don't manipulate the DOM\n    setEnteredName('');\n    setEnteredEmail('');\n    setEnteredEmailTouched(false);\n    setEnteredNameTouched(false);\n  }\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control ';\n  const emailInputClasses = emailInputIsInvalid ? 'form-control invalid' : 'form-control ';\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text'\n          id='name'\n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n        {nameInputIsInvalid && <p className=\"error-text\">Name must not be empty</p>}\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor='email'>Your Email</label>\n        <input type='text'\n          id='email'\n          onChange={emailInputChangeHandler}\n          onBlur={emailInputBlurHandler}\n          value={enteredEmail}\n        />\n        {emailInputIsInvalid && <p className=\"error-text\">Please enter a valid email!</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}