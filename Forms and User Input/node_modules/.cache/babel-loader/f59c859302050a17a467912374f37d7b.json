{"ast":null,"code":"var _jsxFileName = \"C:\\\\ES-06_JS\\\\React\\\\Forms and User Input\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const enteredEmailIsValid = enteredEmail.trim() !== '';\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n  let formIsValid = false; // check all validities\n\n  if (enteredNameIsValid) {\n    formIsValid = true;\n  }\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const emailInputBlurHandler = event => {\n    setEnteredEmailTouched(true);\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    console.log(enteredName);\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue); // nameInputRef.current.value = '';//not ideal way,don't manipulate the DOM\n\n    setEnteredName('');\n    setEnteredNameTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control ';\n  const emailInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control ';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef,\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        onChange: emailInputChangeHandler,\n        onBlur: emailInputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"6XNX2nSrn1qssIBQ7LtCUH3X//s=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useRef","SimpleInput","props","nameInputRef","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","enteredNameIsValid","trim","nameInputIsInvalid","enteredEmailIsValid","emailInputIsInvalid","formIsValid","nameInputChangeHandler","event","target","value","nameInputBlurHandler","emailInputChangeHandler","emailInputBlurHandler","formSubmissionHandler","preventDefault","console","log","enteredValue","current","nameInputClasses","emailInputClasses"],"sources":["C:/ES-06_JS/React/Forms and User Input/src/components/SimpleInput.js"],"sourcesContent":["import { useState, useRef } from 'react';\nconst SimpleInput = (props) => {\n\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const enteredEmailIsValid = enteredEmail.trim() !== '';\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n\n  let formIsValid = false;\n  // check all validities\n  if (enteredNameIsValid) {\n    formIsValid = true;\n  }\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  }\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  }\n\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  }\n\n  const emailInputBlurHandler = event => {\n    setEnteredEmailTouched(true);\n  }\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    if (!enteredNameIsValid) {\n      return;\n    }\n    console.log(enteredName);\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue);\n    // nameInputRef.current.value = '';//not ideal way,don't manipulate the DOM\n    setEnteredName('');\n    setEnteredNameTouched(false);\n  }\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control ';\n  const emailInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control ';\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text'\n          id='name'\n          ref={nameInputRef}\n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n        {nameInputIsInvalid && <p className=\"error-text\">Name must not be empty</p>}\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor='email'>Your Email</label>\n        <input type='text'\n          id='email'\n          onChange={emailInputChangeHandler}\n          onBlur={emailInputBlurHandler}\n          value={enteredEmail}\n        />\n        {emailInputIsInvalid && <p className=\"error-text\">Name must not be empty</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}