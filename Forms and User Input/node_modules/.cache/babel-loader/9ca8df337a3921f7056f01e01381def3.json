{"ast":null,"code":"var _jsxFileName = \"C:\\\\ES-06_JS\\\\React\\\\Forms and User Input\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  let formIsValid = false; // check all validities\n\n  if (enteredNameIsValid) {\n    formIsValid = true;\n  }\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    console.log(enteredName);\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue); // nameInputRef.current.value = '';//not ideal way,don't manipulate the DOM\n\n    setEnteredName('');\n    setEnteredNameTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control ';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef,\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"YSsvqrozZ7j1BZHeTzE8vJYoLZo=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useRef","SimpleInput","props","nameInputRef","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","enteredNameIsValid","trim","nameInputIsInvalid","formIsValid","nameInputChangeHandler","event","target","value","nameInputBlurHandler","formSubmissionHandler","preventDefault","console","log","enteredValue","current","nameInputClasses"],"sources":["C:/ES-06_JS/React/Forms and User Input/src/components/SimpleInput.js"],"sourcesContent":["import { useState, useRef } from 'react';\nconst SimpleInput = (props) => {\n\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n\n  let formIsValid = false;\n  // check all validities\n  if (enteredNameIsValid) {\n    formIsValid = true;\n  }\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  }\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  }\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    if (!enteredNameIsValid) {\n      return;\n    }\n    console.log(enteredName);\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue);\n    // nameInputRef.current.value = '';//not ideal way,don't manipulate the DOM\n    setEnteredName('');\n    setEnteredNameTouched(false);\n  }\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control ';\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text'\n          id='name'\n          ref={nameInputRef}\n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n        {nameInputIsInvalid && <p className=\"error-text\">Name must not be empty</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;;;AACA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAE7B,MAAMC,YAAY,GAAGH,MAAM,EAA3B;EACA,MAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACO,kBAAD,EAAqBC,qBAArB,IAA8CR,QAAQ,CAAC,KAAD,CAA5D;EAEA,MAAMS,kBAAkB,GAAGJ,WAAW,CAACK,IAAZ,OAAuB,EAAlD;EACA,MAAMC,kBAAkB,GAAG,CAACF,kBAAD,IAAuBF,kBAAlD;EAEA,IAAIK,WAAW,GAAG,KAAlB,CAT6B,CAU7B;;EACA,IAAIH,kBAAJ,EAAwB;IACtBG,WAAW,GAAG,IAAd;EACD;;EAED,MAAMC,sBAAsB,GAAGC,KAAK,IAAI;IACtCR,cAAc,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;EACD,CAFD;;EAIA,MAAMC,oBAAoB,GAAGH,KAAK,IAAI;IACpCN,qBAAqB,CAAC,IAAD,CAArB;EACD,CAFD;;EAIA,MAAMU,qBAAqB,GAAGJ,KAAK,IAAI;IACrCA,KAAK,CAACK,cAAN;IACAX,qBAAqB,CAAC,IAAD,CAArB;;IACA,IAAI,CAACC,kBAAL,EAAyB;MACvB;IACD;;IACDW,OAAO,CAACC,GAAR,CAAYhB,WAAZ;IACA,MAAMiB,YAAY,GAAGlB,YAAY,CAACmB,OAAb,CAAqBP,KAA1C;IACAI,OAAO,CAACC,GAAR,CAAYC,YAAZ,EARqC,CASrC;;IACAhB,cAAc,CAAC,EAAD,CAAd;IACAE,qBAAqB,CAAC,KAAD,CAArB;EACD,CAZD;;EAcA,MAAMgB,gBAAgB,GAAGb,kBAAkB,GAAG,sBAAH,GAA4B,eAAvE;EAEA,oBACE;IAAM,QAAQ,EAAEO,qBAAhB;IAAA,wBACE;MAAK,SAAS,EAAEM,gBAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAO,IAAI,EAAC,MAAZ;QACE,EAAE,EAAC,MADL;QAEE,GAAG,EAAEpB,YAFP;QAGE,QAAQ,EAAES,sBAHZ;QAIE,MAAM,EAAEI,oBAJV;QAKE,KAAK,EAAEZ;MALT;QAAA;QAAA;QAAA;MAAA,QAFF,EASGM,kBAAkB,iBAAI;QAAG,SAAS,EAAC,YAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QATzB;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAYE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAQ,QAAQ,EAAE,CAACC,WAAnB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAZF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CAzDD;;GAAMV,W;;KAAAA,W;AA2DN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}